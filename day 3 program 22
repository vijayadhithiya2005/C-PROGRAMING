minimum scalar product
  #include <stdio.h>
#include <stdlib.h>
int compare_asc(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}
int compare_desc(const void *a, const void *b) {
    return (*(int*)b - *(int*)a);
}

int main() {
    int n;
    scanf("%d", &n);

    int v1[n], v2[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &v1[i]);
    }
    for (int i = 0; i < n; i++) {
        scanf("%d", &v2[i]);
    }
    qsort(v1, n, sizeof(int), compare_asc);
    qsort(v2, n, sizeof(int), compare_desc);
    long long scalar_product = 0;
    for (int i = 0; i < n; i++) {
        scalar_product += (long long)v1[i] * v2[i];
    }

    printf("%lld\n", scalar_product);

    return 0;
}
